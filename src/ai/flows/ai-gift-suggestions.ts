// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A personalized gift suggestion AI agent.
 *
 * - personalizedGiftSuggestions - A function that handles the gift suggestion process.
 * - PersonalizedGiftSuggestionsInput - The input type for the personalizedGiftSuggestions function.
 * - PersonalizedGiftSuggestionsOutput - The return type for the personalizedGiftSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PersonalizedGiftSuggestionsInputSchema = z.object({
  recipientInterests: z.string().describe("The recipient's interests."),
  recipientAge: z.number().describe('The recipient age.'),
  occasion: z.string().describe('The occasion for the gift.'),
  giftPreferences: z.string().describe('Any specific gift preferences.'),
  budget: z.number().describe('The budget for the gift.'),
});
export type PersonalizedGiftSuggestionsInput = z.infer<
  typeof PersonalizedGiftSuggestionsInputSchema
>;

const PersonalizedGiftSuggestionsOutputSchema = z.object({
  giftSuggestions: z
    .array(z.string())
    .describe('A list of personalized gift suggestions.'),
  reasoning: z.string().describe('The reasoning behind the suggestions.'),
});
export type PersonalizedGiftSuggestionsOutput = z.infer<
  typeof PersonalizedGiftSuggestionsOutputSchema
>;

export async function personalizedGiftSuggestions(
  input: PersonalizedGiftSuggestionsInput
): Promise<PersonalizedGiftSuggestionsOutput> {
  return personalizedGiftSuggestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalizedGiftSuggestionsPrompt',
  input: {schema: PersonalizedGiftSuggestionsInputSchema},
  output: {schema: PersonalizedGiftSuggestionsOutputSchema},
  prompt: `You are a personalized gift suggestion expert.

You will receive information about the recipient, the occasion, and gift preferences, and a budget, and return a list of gift suggestions, with a brief explanation of why the gift is suitable.

Recipient Interests: {{{recipientInterests}}}
Recipient Age: {{{recipientAge}}}
Occasion: {{{occasion}}}
Gift Preferences: {{{giftPreferences}}}
Budget: {{{budget}}}

Suggest gifts that are thoughtful, unique, and appropriate for the occasion and recipient.
`,
});

const personalizedGiftSuggestionsFlow = ai.defineFlow(
  {
    name: 'personalizedGiftSuggestionsFlow',
    inputSchema: PersonalizedGiftSuggestionsInputSchema,
    outputSchema: PersonalizedGiftSuggestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
